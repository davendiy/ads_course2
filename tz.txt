
listener - шаблон проектування

Нехай є граф, в якому є обходи в глибину і в ширину.
Як його зробити універсальним для всіх задач?
Наприклад нада обійти граф і під час проходу підрахувати к-ть жовтих вершин.

Клас наз інтерфейсом, якщо він є абстрактним і в нього реалізовані тільки методи
====================================================classes=============================================================
 ____________________________
 |  ColorObserver           |    - абстрактний клас
 |_______     ______________|
 |  onBlueVertex()          |
 |  onRedVertex()           |
 |__________________________|


class ColorObserver(meta=ABCMeta):

    @abstractmethod
    def onBlueVertex(self, key):
        pass

    @abstractmethod
    def onRedVertex(self, key):
        pass


class Observer1(ColorObserver):

    def onBlueVertex(self, key):
        print(...)

    def onRedVertex(self, key):
        print(...)


class Graph(...):

    def __init__(self, ...):
        ...
        self.observers = []

    def addObserver(self, obs: ColorObserver):
        self.observers.append(obs)


def dfs(g, st, visited):
    if st in visited:
        return

    if st.color == 'blue':
        for obs in g.observers:
            obs.onBlueVertex(st.key)
    elif st.colot == 'red':
        for obs in g.observers:
            obs.onRedVertex(st.key)

    visited.add(st)
    for neighbour in ...:
        dfs(g, neighbour, visited)



====================================================main================================================================
g = Graph()
o1 = Observer1()
g.addObserver(o1)

dfs(g, ...)

------------------------------------------------------------------------------------------------------------------------

UML - графічне зображення зв'язків між класами

<<>> - абстрактний клас
<> - базовий клас
    ____________________                _____________________
    |   <<Listener>>   |                |   <BaseGraph>     |
    |__________________| <не пунктир>   |___________________|
    |    onBlue()      |--------------<>|                   |
    |    onRed()       | <Агрегація>    |___________________|
    |__________________|                |                   |
                                        |___________________|
            ^                                    ^
            |                                    |
               <наслідування                     |   <наслідування норм класу>
            |   абстрактного класу>              |
                                                 |
            |                                    |
    ______________________              _____________________
    |   ConcreteListener |              |    Graph          |
    |____________________|              |___________________|
    |                    |              |                   |
    |____________________|              |___________________|
    |                    |              |                   |
    |____________________|              |___________________|



